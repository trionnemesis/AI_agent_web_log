# GitHub Actions workflow 的名稱
name: Python application

# 觸發 workflow 的事件
on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build:
    # 執行任務的虛擬機環境
    runs-on: ubuntu-latest

    steps:
    # 步驟 1: 拉取你的程式碼
    - uses: actions/checkout@v4

    # 步驟 2: 設定 Python 環境
    - name: Set up Python 3.10
      uses: actions/setup-python@v5
      with:
        python-version: "3.10"
    
    # 步驟 3: 安裝專案依賴套件
    - name: Install dependencies
      # 從專案根目錄執行，但指向正確的 requirements.txt
      run: |
        python -m pip install --upgrade pip
        pip install -r ./MCP_lms_log_analyzer/EDGE-codex-refactor-lms_log_analyzer_v2-into-modular-project/lms_log_analyzer/requirements.txt
        pip install pytest  # 確保 pytest 已安裝

    # 步驟 4: 執行測試
    - name: Test with pytest
      # 1. 將工作目錄設定為包含 lms_log_analyzer 和 tests 的父目錄
      working-directory: ./MCP_lms_log_analyzer/EDGE-codex-refactor-lms_log_analyzer_v2-into-modular-project
      run: |
        # 2. 將包含 src 的 lms_log_analyzer 目錄加入 PYTHONPATH
        #    這讓 tests/ 中的測試檔案可以透過 'from src import ...' 找到模組
        export PYTHONPATH=$PYTHONPATH:./lms_log_analyzer
        
        # (除錯用) 確認當前目錄的檔案結構
        echo "--- Listing files in correct working directory ---"
        ls -R
        echo "------------------------------------------------"
        
        # 3. 【已修正】執行 pytest，並明確指向正確的 tests 目錄
        #    錯誤原因：原本的路徑是 ./lms_log_analyzer/tests/，但 tests 跟 lms_log_analyzer 是同級目錄
        pytest ./tests/
